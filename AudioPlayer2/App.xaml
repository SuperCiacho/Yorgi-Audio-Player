<Application x:Class="AudioPlayer2.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:converters="clr-namespace:AudioPlayer2.Converters">
  <Application.Resources>
    <converters:DebugConverter x:Key="DebugConverter" />
    <Color x:Key="LightBlue">#FFACC6E0</Color>
    <Color x:Key="BlueGray">#FF3A4C6D</Color>
    <SolidColorBrush x:Key="AppBackground" Color="#3875B2" />
    <SolidColorBrush x:Key="RowBackground" Color="#7597B9" />
    <SolidColorBrush x:Key="AltRowBackground" Color="#82A5C7" />
    <SolidColorBrush x:Key="SelectedRow" Color="{StaticResource BlueGray}" />
    <SolidColorBrush x:Key="TextColor" Color="#FFFF" />
    <SolidColorBrush x:Key="LinesColor" Color="#6C99C5" />
    <SolidColorBrush x:Key="ThumbOutside" Color="#FFA8B300" />
    <SolidColorBrush x:Key="ThumbInside" Color="#99B3BB32" />
    <SolidColorBrush x:Key="ToolbarBackground" Color="{StaticResource BlueGray}" />
    <SolidColorBrush x:Key="TimerBackground" Color="{StaticResource LightBlue}" />
    <SolidColorBrush x:Key="ContextMenuBackgroundDark" Color="{StaticResource BlueGray}" />
    <LinearGradientBrush x:Key="SeparatorColor" EndPoint="0.5,1" StartPoint="0.5,0">
      <LinearGradientBrush.RelativeTransform>
        <TransformGroup>
          <ScaleTransform CenterY="0.5" CenterX="0.5" />
          <SkewTransform CenterY="0.5" CenterX="0.5" />
          <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5" />
          <TranslateTransform />
        </TransformGroup>
      </LinearGradientBrush.RelativeTransform>
      <GradientStop Color="#FF7C7C7C" Offset="0.431" />
      <GradientStop Offset="1" />
      <GradientStop Color="#0000" />
      <GradientStop Color="#CC7C7C7C" Offset="0.084" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Background" Value="{StaticResource ContextMenuBackgroundDark}" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ContextMenu}">
            <Border x:Name="Border" Background="{StaticResource ContextMenuBackgroundDark}" BorderThickness="1" BorderBrush="{StaticResource AltRowBackground}">
              <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="HasDropShadow" Value="true">
                <Setter TargetName="Border" Property="Padding" Value="1,3,1,3" />
                <Setter TargetName="Border" Property="CornerRadius" Value="4" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
      <Setter Property="Background" Value="{StaticResource ToolbarBackground}" />
      <Setter Property="Foreground" Value="{StaticResource TextColor}" />
      <Setter Property="StaysOpenOnClick" Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type MenuItem}">
            <Grid Background="{TemplateBinding Background}">
              <StackPanel Orientation="Horizontal" Focusable="False">
                <ContentControl Content="{TemplateBinding Icon}" MaxHeight="30" />
                <TextBlock VerticalAlignment="Center" Margin="4,0" Text="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" />
              </StackPanel>
              <Border x:Name="Overlay" Background="Transparent" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="Overlay" />
                <Setter Property="Background" Value="#5e2df3f2" TargetName="Overlay" />
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#5E56C7C7" TargetName="Overlay" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Separator}">
            <Grid SnapsToDevicePixels="true" Margin="0,6,0,4">
              <Rectangle Height="1" Fill="{StaticResource SeparatorColor}" Margin="4,0" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
        <ControlTemplate x:Key="RoundButton" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" SnapsToDevicePixels="True" CornerRadius="15" BorderBrush="SlateGray" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ToolbarBackground}">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5" />
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>