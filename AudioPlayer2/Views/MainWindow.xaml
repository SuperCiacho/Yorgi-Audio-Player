<Window x:Class="AudioPlayer2.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:AudioPlayer2.Converters"
        xmlns:viewModels="clr-namespace:AudioPlayer2.ViewModels"
        xmlns:pb="clr-namespace:AudioPlayer2.Behaviors"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:models="clr-namespace:AudioPlayer2.Models;assembly=AudioPlayer2.Models"
        xmlns:playlist="clr-namespace:AudioPlayer2.Models.Playlist;assembly=AudioPlayer2.Models"
        mc:Ignorable="d" d:DesignHeight="800" d:DesignWidth="400"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel}"
        Background="{StaticResource AppBackground}"
        Title="YorgiAmp" Height="800" MinWidth="400" MaxWidth="400">
    <Window.Resources>
        <FrameworkElement x:Key="UIProxy" DataContext="{Binding}"/>
        <converters:DebugConverter x:Key="DebugConverter" />
        <converters:DataGridRowBackgroundSelector x:Key="MultiValueComparer" />

        <Style TargetType="{x:Type DataGridRow}"  BasedOn="{StaticResource {x:Type DataGridRow}}">
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource MultiValueComparer}">
                            <Binding Path="DataContext.CurrentTrackIndex" Source="{StaticResource UIProxy}" />
                            <Binding RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="{StaticResource SelectedRow}" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style TargetType="DataGridRowHeader">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}, Path=IsSelected}" Value="True">
                    <Setter Property="Background" Value="#AC233B67" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="HorizontalContentAlignment" Value="Right" />
            <Setter Property="Background" Value="Transparent" />
        </Style>

<!--        <Style TargetType="{x:Type DataGridHeaderBorder}"></Style>-->

        <Style x:Key="CustomCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}" >
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#AC233B67" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        </Style>

        <Style x:Key="SliderFocusVisualStyle" >
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle x:Name="FocusStyle" StrokeDashArray="4 4" RadiusX="5" RadiusY="5" Fill="Transparent"
                           Stroke="#99029cc7" StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Border Name="outerBorder" Background="{StaticResource ThumbOutside}" BorderBrush="{StaticResource ThumbOutside}"
                                    Height="10" Width="15" Opacity="1" BorderThickness="2" CornerRadius="2"/>
                            <Border Name="innerBorder" Background="{StaticResource ThumbInside}" BorderBrush="{StaticResource ThumbInside}"
                                    Height="5" Width="5" CornerRadius="2" Opacity="1" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="outerBorder" Property="BorderBrush" Value="#BB34b4e3" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="outerBorder" Property="Background" Value="#55ACACAC" />
                                <Setter TargetName="outerBorder" Property="BorderBrush" Value="#55ACACAC" />
                                <Setter TargetName="innerBorder" Property="Width" Value="4" />
                                <Setter TargetName="innerBorder" Property="Height" Value="4" />
                                <Setter TargetName="innerBorder" Property="CornerRadius" Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="TimeVerticalSlider" TargetType="{x:Type Slider}">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Left" SnapsToDevicePixels="True"
                 Width="4" Margin="0,0,2,0" />
                <Border x:Name="TrackBackground"
                Grid.Column="1"
                Margin="0,10"
                BorderThickness="2"
                BorderBrush="LightGray"
                HorizontalAlignment="Center" Width="4" />
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DragCompleted" >
                                    <i:InvokeCommandAction Command="{Binding UpdateStatusCommand}" CommandParameter="{Binding Volume}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Thumb>
                    </Track.Thumb>
                </Track>
                <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Fill="LightGray" Placement="Right"
                 Width="4" Margin="2,0,0,0" SnapsToDevicePixels="True" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="TimeHorizontalSlider" TargetType="{x:Type Slider}">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Top" SnapsToDevicePixels="True"
                 Height="4" Margin="0,0,0,2" />
                <Border x:Name="TrackBackground" Grid.Row="1" Margin="10,0" BorderThickness="2" BorderBrush="LightGray" VerticalAlignment="Center" Height="4" />
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb">
                            <Thumb.Style>
                                <Style TargetType="Thumb" BasedOn="{StaticResource SliderThumbStyle}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentTrack}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                </Track>
                <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Fill="LightGray" Placement="Bottom"
                 SnapsToDevicePixels="True" Height="4" Margin="0,2,0,0"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="VolumeVerticalSlider" TargetType="{x:Type Slider}">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Left" SnapsToDevicePixels="True"
                 Width="4" Margin="0,0,2,0" />
                <Border x:Name="TrackBackground"
                Grid.Column="1"
                Margin="0,10"
                BorderThickness="2"
                BorderBrush="LightGray"
                HorizontalAlignment="Center" Width="4" />
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DragCompleted" >
                                    <i:InvokeCommandAction Command="{Binding UpdateStatusCommand}" CommandParameter="{Binding Volume}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Thumb>
                    </Track.Thumb>
                </Track>
                <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Fill="LightGray" Placement="Right"
                 Width="4" Margin="2,0,0,0" SnapsToDevicePixels="True" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="VolumeHorizontalSlider" TargetType="{x:Type Slider}">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Top" SnapsToDevicePixels="True"
                 Height="4" Margin="0,0,0,2" />
                <Border x:Name="TrackBackground"
                Grid.Row="1"
                Margin="10,0"
                BorderThickness="2"
                BorderBrush="LightGray"
                VerticalAlignment="Center" Height="4" />
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DragCompleted" >
                                    <i:InvokeCommandAction Command="{Binding UpdateStatusCommand}" CommandParameter="{Binding Volume}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Thumb>
                    </Track.Thumb>
                </Track>
                <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Fill="LightGray" Placement="Bottom"
                 SnapsToDevicePixels="True" Height="4" Margin="0,2,0,0"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                    <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource SliderFocusVisualStyle}" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsMoveToPointEnabled" Value="True" />
        </Style>

        <Style x:Key="VolumeSliderStyle" BasedOn="{StaticResource SliderStyle}" TargetType="{x:Type Slider}">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="MinHeight" Value="15" />
                    <Setter Property="Template" Value="{StaticResource VolumeHorizontalSlider}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="MinWidth" Value="21" />
                    <Setter Property="MinHeight" Value="104" />
                    <Setter Property="Template" Value="{StaticResource VolumeVerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TimeSliderStyle" BasedOn="{StaticResource SliderStyle}" TargetType="{x:Type Slider}">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="MinHeight" Value="15" />
                    <Setter Property="Template" Value="{StaticResource TimeHorizontalSlider}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="MinWidth" Value="21" />
                    <Setter Property="MinHeight" Value="104" />
                    <Setter Property="Template" Value="{StaticResource TimeVerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitializedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <ContentControl Content="{StaticResource UIProxy}" Visibility="Collapsed"/>

        <Slider Grid.Row="1" Grid.Column="0"
                HorizontalAlignment="Stretch" Margin="4,4,4,5"
                Value="{Binding CurrentTime}" Maximum="{Binding TrackDuration}"
                Style="{StaticResource TimeSliderStyle}"
                />

        <Slider Grid.Row="2" Grid.Column="1"
                VerticalAlignment="Bottom" HorizontalAlignment="Right"
                Value="{Binding Volume}" Maximum="1.0" 
                SmallChange="0.01" LargeChange="0.1"
                Style="{StaticResource VolumeSliderStyle}" />

        <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center"
                   Text="{Binding Status, UpdateSourceTrigger=PropertyChanged}" 
                   Foreground="White" FontWeight="Bold" />

        <Border Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                BorderBrush="SlateGray" BorderThickness="1" CornerRadius="5"
                Margin="8,0" Padding="4"
                Background="{StaticResource TimerBackground}"
                >
            <TextBlock Text="{Binding Time, TargetNullValue=' --:-- '}" HorizontalAlignment="Center" />
        </Border>

        <StackPanel Grid.Row="2" Grid.Column="0"
                    HorizontalAlignment="Center" VerticalAlignment="Top"
                    Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Height" Value="25" />
                    <Setter Property="Width" Value="25" />
                    <Setter Property="Margin" Value="4,0" />
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="20" ShadowDepth="-1" />
                        </Setter.Value>
                    </Setter>
                </Style>
            </StackPanel.Resources>

            <Button Command="{Binding PreviousCommand}" Template="{StaticResource RoundButton}">
                <Image Source="../Images/audio_previous.png" />
            </Button>
            <Button Command="{Binding PlayCommand}" CommandParameter="{Binding SelectedTrack}" 
                    Background="{StaticResource ToolbarBackground}"
                    Template="{StaticResource RoundButton}">
                <Image Source="../Images/audio_play.png" />
            </Button>
            <Button Command="{Binding PauseCommand}" Template="{StaticResource RoundButton}">
                <Image Source="../Images/audio_pause.png"/>
            </Button>
            <Button Command="{Binding StopCommand}" Template="{StaticResource RoundButton}">
                <Image Source="../Images/audio_stop.png" />
            </Button>
            <Button Command="{Binding NextCommand}" Template="{StaticResource RoundButton}">
                <Image Source="../Images/audio_next.png"/>
            </Button>
            <Button Command="{Binding OpenCommand}" Template="{StaticResource RoundButton}">
                <Image Source="../Images/audio_eject.png"/>
            </Button>
        </StackPanel>
        <DataGrid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="2,8,2,4"
                  SelectedIndex="{Binding SelectedTrackIndex, Mode=TwoWay}"
                  SelectedItem="{Binding SelectedTrack, Mode=TwoWay}"
                  ItemsSource="{Binding Tracks, IsAsync=True}" 
                  AutoGenerateColumns="False" GridLinesVisibility="None"
                  HeadersVisibility="Row" SelectionMode="Single" 
                  CanUserDeleteRows="True" CanUserResizeRows="False" CanUserAddRows="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  Background="Transparent" BorderThickness="0"
                  CellStyle="{StaticResource CustomCellStyle}"
                  pb:PlaylistBehaviours.RowNumering="True"
                  >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick" >
                    <i:InvokeCommandAction Command="{Binding PlayCommand}" CommandParameter="{Binding SelectedTrack}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Resources>
                <Style x:Key="NameColumnStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                </Style>
                <Style x:Key="TimeColumnStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource NameColumnStyle}">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                    <Setter Property="Margin" Value="2,0,5,0" />
                    <Setter Property="TextTrimming" Value="None" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu Width="150">
                    <MenuItem Header="Play" Command="{Binding PlayCommand}" CommandParameter="{Binding SelectedTrack}">
                        <MenuItem.Icon>
                            <Image Source="../Images/audio_play.png" Width="20" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="File info"
                              Command="{Binding ShowFileInfoCommand}" CommandParameter="{Binding SelectedTrack}">
                        <MenuItem.Icon>
                            <Image Source="../Images/contextmenu_fileinfo.png" Width="20" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Open location"
                              Command="{Binding OpenLocationCommand}" CommandParameter="{Binding SelectedTrack}">
                        <MenuItem.Icon>
                            <Image Source="../Images/contextmenu_filelocation.png" Width="20" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Header, RelativeSource={RelativeSource AncestorType=DataGridRow, Mode=FindAncestor}}" 
                               Foreground="{StaticResource TextColor}" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Center" Padding="4,4,4,4"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" Width="*" IsReadOnly="True" ElementStyle="{StaticResource NameColumnStyle}"/>

                <DataGridTextColumn IsReadOnly="True" Width="45"
                                    ElementStyle="{StaticResource TimeColumnStyle}"
                                    Binding="{Binding Duration, StringFormat='m\\:ss'}" 
                                    />
            </DataGrid.Columns>
        </DataGrid>
        <Menu Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
              Height="30" Background="{StaticResource ToolbarBackground}">
            <MenuItem>
                <MenuItem.Header>
                    <Image Source="../Images/toolbar_add.png"/>
                </MenuItem.Header>
                <MenuItem Header="Load file(s)" Command="{Binding OpenCommand}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_open_file.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Load folder">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_open_folder.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <Image Source="../Images/toolbar_remove.png"/>
                </MenuItem.Header>
                <MenuItem Header="Selected" Command="{Binding RemoveTrackCommand}" CommandParameter="{x:Static models:RemoveTrackMode.Selected}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_remove_selected.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Unselected" Command="{Binding RemoveTrackCommand}" CommandParameter="{x:Static models:RemoveTrackMode.Unselected}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_remove_unselected.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="All" Command="{Binding RemoveTrackCommand}" CommandParameter="{x:Static models:RemoveTrackMode.All}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_remove_all.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <Image Source="../Images/toolbar_sort.png"/>
                </MenuItem.Header>
                <MenuItem Header="By name" Command="{Binding SortPlaylistCommand}" CommandParameter="{x:Static playlist:SortPlaylistBy.Name}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_sort_byname.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="By artist" Command="{Binding SortPlaylistCommand}" CommandParameter="{x:Static playlist:SortPlaylistBy.Artist}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_sort_byartist.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="By time" Command="{Binding SortPlaylistCommand}" CommandParameter="{x:Static playlist:SortPlaylistBy.Duration}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_sort_bydate.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <Image Source="../Images/toolbar_playlist.png"/>
                </MenuItem.Header>
                <MenuItem Header="Load" Command="{Binding LoadPlaylistCommand}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_playlist_load.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save"  Command="{Binding SavePlaylistCommand}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_playlist_save.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Manage" Visibility="Collapsed">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_playlist_clear.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
    </Grid>
</Window>