<UserControl x:Class="AudioPlayer2.Views.Playlist"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:pb="clr-namespace:AudioPlayer2.Behaviors"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:AudioPlayer2.Converters"
             xmlns:playlist="clr-namespace:AudioPlayer2.Models.Playlist;assembly=AudioPlayer2.Models"
             xmlns:models="clr-namespace:AudioPlayer2.Models;assembly=AudioPlayer2.Models"
             mc:Ignorable="d" d:DesignHeight="600" d:DesignWidth="400">

    <UserControl.Resources>
        <!-- ReSharper disable once InconsistentNaming -->
        <FrameworkElement x:Key="UIProxy" DataContext="{Binding}"/>

        <!--<Style TargetType="{x:Type DataGridHeaderBorder}"></Style>-->

        <converters:DataGridRowBackgroundSelector x:Key="MultiValueComparer" />

        <Style TargetType="{x:Type DataGridRow}"  BasedOn="{StaticResource {x:Type DataGridRow}}">
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource MultiValueComparer}">
                            <Binding Path="DataContext.CurrentTrackIndex" Source="{StaticResource UIProxy}" />
                            <Binding RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Background" Value="{StaticResource SelectedRow}" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style TargetType="DataGridRowHeader">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}, Path=IsSelected}" Value="True">
                    <Setter Property="Background" Value="#AC233B67" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="HorizontalContentAlignment" Value="Right" />
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="CustomCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}" >
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#AC233B67" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        </Style>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitializedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <Menu DockPanel.Dock="Bottom" Height="30" Background="{StaticResource ToolbarBackground}">
            <MenuItem>
                <MenuItem.Header>
                    <Image Source="../Images/toolbar_add.png"/>
                </MenuItem.Header>
                <MenuItem Header="Load file(s)" Command="{Binding OpenCommand}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_open_file.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Load folder">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_open_folder.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <Image Source="../Images/toolbar_remove.png"/>
                </MenuItem.Header>
                <MenuItem Header="Selected" Command="{Binding RemoveTrackCommand}" CommandParameter="{x:Static models:RemoveTrackMode.Selected}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_remove_selected.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Unselected" Command="{Binding RemoveTrackCommand}" CommandParameter="{x:Static models:RemoveTrackMode.Unselected}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_remove_unselected.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="All" Command="{Binding RemoveTrackCommand}" CommandParameter="{x:Static models:RemoveTrackMode.All}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_remove_all.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <Image Source="../Images/toolbar_sort.png"/>
                </MenuItem.Header>
                <MenuItem Header="By name" Command="{Binding SortPlaylistCommand}" CommandParameter="{x:Static playlist:SortPlaylistBy.Name}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_sort_byname.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="By artist" Command="{Binding SortPlaylistCommand}" CommandParameter="{x:Static playlist:SortPlaylistBy.Artist}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_sort_byartist.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="By time" Command="{Binding SortPlaylistCommand}" CommandParameter="{x:Static playlist:SortPlaylistBy.Duration}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_sort_bydate.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem>
                <MenuItem.Header>
                    <Image Source="../Images/toolbar_playlist.png"/>
                </MenuItem.Header>
                <MenuItem Header="Load" Command="{Binding LoadPlaylistCommand}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_playlist_load.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save"  Command="{Binding SavePlaylistCommand}">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_playlist_save.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Manage" Visibility="Collapsed">
                    <MenuItem.Icon>
                        <Image Source="../Images/toolbar_playlist_clear.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <ContentControl Content="{StaticResource UIProxy}" Visibility="Collapsed"/>

        <DataGrid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  SelectedIndex="{Binding SelectedTrackIndex, Mode=TwoWay}"
                  SelectedItem="{Binding SelectedTrack, Mode=TwoWay}"
                  ItemsSource="{Binding Tracks, IsAsync=True}" 
                  AutoGenerateColumns="False" GridLinesVisibility="None"
                  HeadersVisibility="Row" SelectionMode="Single" 
                  CanUserDeleteRows="True" CanUserResizeRows="False" CanUserAddRows="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  Background="Transparent" BorderThickness="0"
                  CellStyle="{StaticResource CustomCellStyle}"
                  pb:PlaylistBehaviours.RowNumering="True" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick" >
                    <i:InvokeCommandAction Command="{Binding PlayCommand}" CommandParameter="{Binding SelectedTrack}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Resources>
                <Style x:Key="NameColumnStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Foreground" Value="{StaticResource TextColor}" />
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                </Style>
                <Style x:Key="TimeColumnStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource NameColumnStyle}">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                    <Setter Property="Margin" Value="2,0,5,0" />
                    <Setter Property="TextTrimming" Value="None" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu Width="150">
                    <MenuItem Header="Play" Command="{Binding TrackDoubleClickedCommand}" CommandParameter="{Binding SelectedTrack}">
                        <MenuItem.Icon>
                            <Image Source="../Images/audio_play.png" Width="20" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="File info"
                              Command="{Binding ShowFileInfoCommand}" CommandParameter="{Binding SelectedTrack}">
                        <MenuItem.Icon>
                            <Image Source="../Images/contextmenu_fileinfo.png" Width="20" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Open location"
                              Command="{Binding OpenLocationCommand}" CommandParameter="{Binding SelectedTrack}">
                        <MenuItem.Icon>
                            <Image Source="../Images/contextmenu_filelocation.png" Width="20" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Header, RelativeSource={RelativeSource AncestorType=DataGridRow, Mode=FindAncestor}}" 
                               Foreground="{StaticResource TextColor}" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Center" Padding="4,4,4,4"/>
                </DataTemplate>
            </DataGrid.RowHeaderTemplate>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" Width="*" IsReadOnly="True" ElementStyle="{StaticResource NameColumnStyle}"/>

                <DataGridTextColumn IsReadOnly="True" Width="45"
                                    ElementStyle="{StaticResource TimeColumnStyle}"
                                    Binding="{Binding Duration, StringFormat='m\\:ss'}" 
                />
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
